

# This file was *autogenerated* from the file experiment.sage
from sage.all_cmdline import *   # import sage library

_sage_const_70 = Integer(70); _sage_const_3301 = Integer(3301); _sage_const_20 = Integer(20); _sage_const_50 = Integer(50); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
load("./Geometric-LWE-Estimator/framework/LWE.sage")

n = _sage_const_70 
m = n
q = _sage_const_3301 
sigma = sqrt(_sage_const_20 )
D_s = build_Gaussian_law(sigma, _sage_const_50 )
D_e = D_s
d = m + n
lwe_instance = LWE(n, q, m, D_e, D_s)
ebdd = lwe_instance.embed_into_EBDD()
beta, delta = ebdd.estimate_attack()

print(f"beta: {beta}\n{delta=}")

v0 = vec([randint(_sage_const_0 , _sage_const_1 ) for i in range(m + n)])
v1 = vec([randint(_sage_const_0 , _sage_const_1 ) for i in range(m + n)])
v2 = vec([randint(_sage_const_0 , _sage_const_1 ) for i in range(m + n)])
v3 = vec([randint(_sage_const_0 , _sage_const_1 ) for i in range(m + n)])           
l0, l1, l2, l3 = ebdd.leak(v0) - _sage_const_1 , ebdd.leak(v1) - _sage_const_1 , ebdd.leak(v2) - _sage_const_1 , ebdd.leak(v3) - _sage_const_1 
_ = ebdd.integrate_ineq_hint(-v0, -l0)
_ = ebdd.integrate_ineq_hint(-v1, -l1)
_ = ebdd.integrate_ineq_hint(-v2, -l2)
_ = ebdd.integrate_ineq_hint(-v3, -l3)

beta, delta = ebdd.estimate_attack()
print(f"beta: {beta}\n{delta=}")

